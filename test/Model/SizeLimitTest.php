<?php
/**
 * SizeLimitTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Everest
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Percona Everest schema
 *
 * # Authentication All requests to Everest API require `Authorization: Bearer <token>` header with a valid token in plain-text.  The token can be obtained by using `everestctl token reset` which resets the token and prints it to the screen.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Everest\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SizeLimitTest Class Doc Comment
 *
 * @category    Class
 * @description sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
 * @package     Everest
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SizeLimitTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SizeLimit"
     */
    public function testSizeLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
